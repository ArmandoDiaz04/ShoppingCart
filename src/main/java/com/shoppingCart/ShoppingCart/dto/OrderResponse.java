package com.shoppingCart.ShoppingCart.dto;

import com.shoppingCart.ShoppingCart.security.dto.UserResponse;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.annotation.Nullable;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.PositiveOrZero;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.Setter;

import java.util.Date;

@AllArgsConstructor
@RequiredArgsConstructor
@Setter
@Getter
public class OrderResponse {
    // Autogenerated ID for the order. Not necessary to provide.
    @Schema(name = "idOrder", required = false, example = "1", defaultValue = "2", description = "This key is autogenerated, it's not necessary")
    private Integer idOrder;

    // Automatically calculated total amount of the order. Not necessary to provide.
    @Schema(name = "totalAmount", required = false, example = "1", defaultValue = "2", description = "This key is autocalculate, it's not necessary")
    @PositiveOrZero
    private double totalAmount;

    // Total number of items in the order. Must be a non-negative value.
    @Schema(name = "totalItems", required = false, example = "1", defaultValue = "2", description = "This key is to indicate total items of order")
    @Min(0)
    private int totalItems;

    // Status of the order. Must be provided and cannot be null.
    @Schema(name = "status", required = true, example = "in progress", defaultValue = "in progress", description = "This key indicates the status of the order")
    private String status;

    // User associated with the order. Must be provided and cannot be null.
    @Schema(name = "idUser", required = true, example = "1", defaultValue = "2", description = "This key indicates the user")
    private UserResponse idUser;

    // Date when the order was created.
    @Schema(name = "creatDate", required = true, example = "", defaultValue = "", description = "This key indicates the order creation date")
    private Date creatDate;

    // Date when the order was last updated.
    @Schema(name = "updateDate", required = true, example = "", defaultValue = "", description = "This key indicates the order update date")
    private Date updateDate;

    // Payment information associated with the order. Can be null.
    @Schema(name = "idPayment", required = true, example = "", defaultValue = "", description = "This key indicates payment")
    @Nullable
    private PaymentResponse idPayment;
}
