package com.shoppingCart.ShoppingCart.dto;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.Valid;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.PositiveOrZero;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.Setter;

@AllArgsConstructor
@RequiredArgsConstructor
@Setter
@Getter
public class OrderDetailDto {
    // Autogenerated ID for the order detail. Not necessary to provide.
    @Schema(name = "idOrderDetail", required = false, example = "1", defaultValue = "2", description = "This key is autogenerated, it's not necessary")
    private Integer idOrderDetail;

    // Quantity of products in this order detail. Must be at least 1.
    @Schema(name = "quantity", required = true, example = "1", defaultValue = "2", description = "This key is to indicate the quantity of products")
    @Min(1)
    private int quantity;

    // Amount related to this order detail. Can be zero or positive.
    @Schema(name = "amount", required = false, example = "1", defaultValue = "0", description = "This key is to indicate the amount of detail")
    @PositiveOrZero
    private double amount;

    // ID of the product associated with this order detail. Must not be null and should be a valid ProductResponse object.
    @Schema(name = "productId", required = true, example = "1", defaultValue = "2", description = "This key is to indicate the id of product")
    @NotNull
    @Valid
    private ProductResponse productId;

    // Price of the product associated with this order detail. Must be zero or positive.
    @Schema(name = "productPrice", required = true, example = "14.15", defaultValue = "10.0", description = "This key is to indicate the product price")
    @PositiveOrZero
    private double productPrice;

    // ID of the order to which this detail belongs. Must not be null.
    @Schema(name = "idOrder", required = true, example = "", defaultValue = "2", description = "This key is to indicate the id order")
    @NotNull
    private OrderResponse idOrder;
}
